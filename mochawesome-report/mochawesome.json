{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-01T16:33:44.151Z",
    "end": "2025-08-01T16:33:53.971Z",
    "duration": 9820,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e87a90c0-fcd5-41cb-a9c1-130e63d2ee74",
      "title": "",
      "fullFile": "C:\\Users\\trian\\Downloads\\QA Engineer\\SESI 9\\web-ui-automation\\test\\testSauce.js",
      "file": "\\test\\testSauce.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "32f1e741-0035-4b1e-95f0-b37892d11e5e",
          "title": "SauceDemo Login Test and sort product from a-z",
          "fullFile": "C:\\Users\\trian\\Downloads\\QA Engineer\\SESI 9\\web-ui-automation\\test\\testSauce.js",
          "file": "\\test\\testSauce.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should login success and sort product from a-z ",
              "fullTitle": "SauceDemo Login Test and sort product from a-z should login success and sort product from a-z ",
              "timedOut": false,
              "duration": 9802,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Membuat opsi Chrome agar berjalan di mode incognito\nlet options = new chrome.Options();\noptions.addArguments('--incognito');\n// Membuat instance baru dari browser Chrome dengan mode incognito\nlet driver = await new Builder().forBrowser('chrome').setChromeOptions(options).build();\ntry {\n    // Membuka halaman login saucedemo.com\n    await driver.get('https://www.saucedemo.com/');\n    // Menemukan input username dan mengisi dengan username standar\n    await driver.findElement(By.id('user-name')).sendKeys('standard_user');\n    // Menemukan input password dan mengisi dengan password standar\n    await driver.findElement(By.id('password')).sendKeys('secret_sauce');\n    // Menemukan tombol login dan mengkliknya\n    await driver.findElement(By.id('login-button')).click();\n    // Menunggu hingga halaman produk muncul (indikator: url berubah)\n    await driver.wait(until.urlContains('inventory'), 5000);\n    // Memastikan login berhasil dengan mengecek keberadaan elemen produk\n    let productTitle = await driver.findElement(By.className('title')).getText();\n    assert.strictEqual(productTitle, 'Products');\n     // Pilih sorting dari A ke Z\n    let sortDropdown = await driver.findElement(By.className('product_sort_container'));\n    await sortDropdown.sendKeys('Name (A to Z)');\n    // Ambil semua nama produk setelah sorting\n    let productElements = await driver.findElements(By.className('inventory_item_name'));\n    let productNames = [];\n    for (let el of productElements) {\n        productNames.push(await el.getText());\n    }\n    // // Cek apakah produk sudah terurut dari A ke Z\n    // let sortedNames = [...productNames].sort();\n    // assert.deepStrictEqual(productNames, sortedNames);\n    await driver.sleep(5000)\n    console.log('Login sukses!');\n} catch (error) {\n    console.error('Test gagal:', error);\n} finally {\n    // Menutup browser setelah test selesai\n    await driver.quit();\n}",
              "err": {},
              "uuid": "d6e59f4e-703e-46dd-8968-97c338827723",
              "parentUUID": "32f1e741-0035-4b1e-95f0-b37892d11e5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6e59f4e-703e-46dd-8968-97c338827723"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9802,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}